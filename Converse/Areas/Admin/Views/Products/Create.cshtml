@model Converse.Models.Product

@{
    ViewBag.Title = "Thêm mới sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/Admin_layout.cshtml";
}
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<h1>
    @ViewBag.Title
</h1>
<style>
    h1 {
        text-align: center;
        padding-block: 30px;
    }
</style>

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="control-label col-md-2">Loại hàng</div>
            <div class="col-md-10">
                @Html.DropDownList("CatID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CatID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Tên sản phẩm</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Mô tả</div>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.NameDecription, new { htmlAttributes = new { @class = "form-control", @id = "NameDecription" } })
                <script type="text/javascript" lang="javascript">
                    CKEDITOR.replace("NameDecription");
                </script>
                @Html.ValidationMessageFor(model => model.NameDecription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Ảnh chính</div>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadImage, htmlAttributes: new { @type = "file" })
                @Html.ValidationMessageFor(model => model.UploadImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Ảnh phụ</div>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadImageHover, htmlAttributes: new { @type = "file" })
                @Html.ValidationMessageFor(model => model.UploadImageHover, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Đã bán</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SoldQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SoldQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Còn lại</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RemainQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RemainQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Giảm giá</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DISCOUNT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DISCOUNT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Tạo mới" class="btn btn-success" />
                @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}

